<apex:page showheader="false" sidebar="false" standardStylesheets="false">



  <h1>Let’s start chatting...</h1>
  <br />
  Click the button to start a chat.
  <br />
  <!--Embedded Service Snippet-->
<style type='text/css'>
    .embeddedServiceHelpButton .helpButton .uiButton {
        background-color: #000000;
        font-family: "helvetica neue", sans-serif;
    }
    .embeddedServiceHelpButton .helpButton .uiButton:focus {
        outline: 1px solid #000000;
    }
    
    .embeddedServiceHelpButton .helpButton .uiButton.helpButtonDisabled { display: none; }
    
    
</style>



<script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
<script type='text/javascript'>
    var initESW = function(gslbBaseURL) {
        embedded_svc.settings.displayHelpButton = true; //Or false
         embedded_svc.settings.language = 'fr'; //For example, enter 'en' or 'en-US'

        embedded_svc.settings.defaultMinimizedText = 'Un conseil beauté ?'; //(Defaults to Chat With an expert)
        embedded_svc.settings.disabledMinimizedText = 'Agent hors ligne'; //(Defaults to Agent Offline)

        embedded_svc.settings.loadingText = 'Chargement'; //(Defaults to Loading)
        embedded_svc.settings.storageDomain = 'sisley--buildbbd--c.visualforce.com'; //(Sets the domain for your deployment so that visitors can navigate subdomains during a chat session)

        // Settings for Chat
        //embedded_svc.settings.directToButtonRouting = function(prechatFormData) {
            // Dynamically changes the button ID based on what the visitor enters in the pre-chat form.
            // Returns a valid button ID.
        //};
        //embedded_svc.settings.prepopulatedPrechatFields = {}; //Sets the auto-population of pre-chat form fields
        //embedded_svc.settings.fallbackRouting = []; //An array of button IDs, user IDs, or userId_buttonId
        //embedded_svc.settings.offlineSupportMinimizedText = '...'; //(Defaults to Contact Us)

        embedded_svc.settings.enabledFeatures = ['LiveAgent'];
        embedded_svc.settings.entryFeature = 'LiveAgent';

        embedded_svc.init(
            'https://sisley--buildbbd.my.salesforce.com',
            'https://buildbbd-chatbuildbbd.cs89.force.com/liveAgentSetupFlow',
            gslbBaseURL,
            '00D0E000000EEXp',
            'France_Chat',
            {
                baseLiveAgentContentURL: 'https://c.la2-c1cs-fra.salesforceliveagent.com/content',
                deploymentId: '5720E00000000tp',
                buttonId: '5730E00000005Z9',
                baseLiveAgentURL: 'https://d.la2-c1cs-fra.salesforceliveagent.com/chat',
                eswLiveAgentDevName: 'France_Chat',
                isOfflineSupportEnabled: false
            }
        );
    };

    if (!window.embedded_svc) {
        var s = document.createElement('script');
        s.setAttribute('src', 'https://sisley--buildbbd.my.salesforce.com/embeddedservice/5.0/esw.min.js');
        s.onload = function() {
            initESW(null);
        };
        document.body.appendChild(s);
    } else {
        initESW('https://service.force.com');
    }
    
    
    function checkAvailability() {
            const elementEnabled = document.getElementsByClassName('uiButton helpButtonEnabled');
            const elementDisabled = document.getElementsByClassName('uiButton helpButtonDisabled');
            if(elementEnabled && elementEnabled.length > 0) {
                document.getElementsByClassName('embeddedServiceHelpButton').item(0).style.display = "block";
            }
            if(elementDisabled && elementDisabled.length > 0) {
                document.getElementsByClassName('embeddedServiceHelpButton').item(0).style.display = "none";
            }     
        }
       
        window.setInterval(function () {
            checkAvailability();
        }, 500);
    
    
    
    
</script>


<script type='text/javascript' src='https://c.la2-c1cs-fra.salesforceliveagent.com/content/g/js/51.0/deployment.js'></script>
<script type='text/javascript'>
liveagent.init('https://d.la2-c1cs-fra.salesforceliveagent.com/chat', '5720E00000000tp', '00D0E000000EEXp');
</script>


<!-- Start of Invitations -->
<div class="embeddedServiceInvitation" id="snapins_invite" aria-live="assertive" role="dialog" aria-atomic="true">
    <div class="embeddedServiceInvitationHeader" aria-labelledby="snapins_titletext" aria-describedby="snapins_bodytext">
        
        
        <span class="embeddedServiceTitleText" id="snapins_titletext">Invitation automatique</span>
        <button type="button" id="closeInvite" class="embeddedServiceCloseIcon" aria-label="Exit invitation">&times;</button>
  </div>
    <div class="embeddedServiceInvitationBody">
        <p id="snapins_bodytext">Souhaitez-vous échanger et recevoir des conseils par l'un de nos agents ?</p>
    </div>
    <div class="embeddedServiceInvitationFooter" aria-describedby="snapins_bodytext">
        <button type="button" class="embeddedServiceActionButton" id="rejectInvite">Fermer</button>
        <button type="button" class="embeddedServiceActionButton" id="acceptInvite">Commencer le chat</button>
    </div>
</div>
 
<style type='text/css'>
    #snapins_invite { background-color: #FFFFFF; font-family: "helvetica neue", sans-serif; overflow: visible; border-radius: 8px; visibility: hidden; }
    .embeddedServiceInvitation { background-color: transparent; max-width: 280px; max-height: 200px; -webkit-box-shadow: 0 7px 12px rgba(0,0,0,0.28); -moz-box-shadow: 0 7px 12px rgba(0,0,0,0.28); box-shadow: 0 7px 12px rgba(0,0,0,0.28); }
    @media only screen and (min-width: 48em) { /*mobile*/ .embeddedServiceInvitation { max-width: 332px; max-height: 210px; } }
    .embeddedServiceInvitation > .embeddedServiceInvitationHeader { width: inherit; height: 32px; line-height: 32px; padding: 10px; color: #FFFFFF; background-color: #222222; overflow: initial; display: flex; justify-content: space-between; align-items: stretch; border-top-left-radius: 8px; border-top-right-radius: 8px; }
    .embeddedServiceInvitationHeader #embeddedServiceAvatar { width: 32px; height: 32px; border-radius: 50%; }
    .embeddedServiceInvitationHeader .embeddedServiceTitleText { font-size: 18px; font-family: "helvetica neue";color: #FFFFFF; overflow: hidden; word-wrap: normal; white-space: nowrap; text-overflow: ellipsis; align-self: stretch; flex-grow: 1; max-width: 100%; margin: 0 12px; }
    .embeddedServiceInvitationHeader .embeddedServiceCloseIcon { border: none; border-radius: 3px; cursor: pointer; position: relative; bottom: 3%; background-color: transparent; width: 32px; height: 32px; font-size: 23px; color: #FFFFFF; }
    .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:focus { outline: none; }
    .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:focus::before { content: " "; position: absolute; top: 11%; left: 7%; width: 85%; height: 85%; background-color: rgba(255, 255, 255, 0.2); border-radius: 4px; pointer-events: none; }
    .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:active, .embeddedServiceCloseIcon:hover { background-color: #FFFFFF; color: rgba(0,0,0,0.7); opacity: 0.7; }
    .embeddedServiceInvitation > .embeddedServiceInvitationBody { background-color: #FFFFFF; font-family: "helvetica neue";max-height: 110px; min-width: 260px; margin: 0 8px; font-size: 14px; line-height: 20px; overflow: auto; }
    .embeddedServiceInvitationBody p { color: #333333; font-family: "helvetica neue";padding: 8px; margin: 12px 0; }
    .embeddedServiceInvitation > .embeddedServiceInvitationFooter { width: inherit; color: #FFFFFF; text-align: right; background-color: #FFFFFF; padding: 10px; max-height: 50px; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px; }
    .embeddedServiceInvitationFooter > .embeddedServiceActionButton { font-size: 14px; max-height: 40px; border: none; border-radius: 4px; padding: 10px; margin: 4px; text-align: center; text-decoration: none; display: inline-block; cursor: pointer; }
    .embeddedServiceInvitationFooter > #acceptInvite { background-color: #000000; font-family: "helvetica neue";color: #FFFFFF; }
    .embeddedServiceInvitationFooter > #rejectInvite { background-color: #FFFFFF; font-family: "helvetica neue";color: #000000; }
</style>
<script type='text/javascript'>
    (function() {
        document.getElementById('closeInvite').onclick = function() { liveagent.rejectChat('5730E00000005ZE'); };
        document.getElementById('rejectInvite').onclick = function() { liveagent.rejectChat('5730E00000005ZE'); }; // use this API call to reject invitations
        document.getElementById('acceptInvite').onclick = function() { liveagent.startChat('5730E00000005ZE'); }; // use this API call to start chat from invitations
        document.addEventListener('keyup', function(event) { if (event.keyCode == 27) { embedded_svc.inviteAPI.inviteButton.rejectInvite(); }})
    })();
</script>
<!-- End of Invitations -->



</apex:page>